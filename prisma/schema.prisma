generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Column {
  id        String   @id @default(cuid())
  title     String   @default("New Column")
  color     String   @default("#CCCCCC")
  createdAt DateTime @default(now())

  tasks     Task[]   @relation("ColumnTasks")

  createdBy     String?
  createdByUser User?   @relation("UserColumns", fields: [createdBy], references: [id])
}

model Task {
  id        String   @id @default(cuid())
  content   String   @default("New Task")
  position  Int
  columnId  String
  color     String   @default("#CCCCCC")
  createdAt DateTime @default(now())
  tags      String[]

  column   Column   @relation("ColumnTasks", fields: [columnId], references: [id])

  createdBy     String?
  createdByUser User?   @relation("UserCreatedTasks", fields: [createdBy], references: [id])

  assignees User[] @relation("TaskAssignees")

  @@index([columnId, position])
}

model User {
  id        String   @id @default(cuid())
  login     String   @unique
  password  String
  avatarUrl String   @default("/unset_avatar.jpg")
  color     String   @default("#CCCCCC")
  createdAt DateTime @default(now())
  tags      String[]
  nickname  String   @default("Anonymous")
  email     String?  @unique
  metadata  Json     @default("{}")

  createdTasks Task[]   @relation("UserCreatedTasks")
  createdCols  Column[] @relation("UserColumns")

  accounts Account[]

  assignedTasks Task[] @relation("TaskAssignees")
}

model Account {
  id        String   @id @default(cuid())
  provider  String
  providerId String
  userId    String

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerId])
}
