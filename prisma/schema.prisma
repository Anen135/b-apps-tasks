generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Column {
  id        String   @id @default(cuid())
  title     String   @default("New Column")
  color     String   @default("#CCCCCC")
  createdAt DateTime @default(now())

  createdBy     String?
  createdByUser User?   @relation("UserColumns", fields: [createdBy], references: [id])
  tasks         Task[]  @relation("ColumnTasks")
}

model Task {
  id        String   @id @default(cuid())
  content   String   @default("New Task")
  position  Int
  columnId  String
  color     String   @default("#CCCCCC")
  createdAt DateTime @default(now())
  tags      String[]

  createdBy     String?
  createdByUser User?   @relation("UserCreatedTasks", fields: [createdBy], references: [id])
  column        Column  @relation("ColumnTasks", fields: [columnId], references: [id])
  assignees     User[]  @relation("TaskAssignees")

  @@index([columnId, position])
}

model User {
  id        String   @id @default(cuid())
  login     String   @unique
  password  String
  avatarUrl String   @default("/unset_avatar.png")
  color     String   @default("#CCCCCC")
  createdAt DateTime @default(now())
  tags      String[]
  nickname  String   @default("Anonymous")
  email     String?  @unique
  metadata  Json     @default("{}")

  accounts      Account[]
  createdTasks  Task[]    @relation("UserCreatedTasks")
  createdCols   Column[]  @relation("UserColumns")
  assignedTasks Task[]    @relation("TaskAssignees")
  authoredNews  News[]    @relation("NewsAuthor")
}

model Account {
  id         String @id @default(cuid())
  provider   String
  providerId String
  userId     String

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerId])
}

model News {
  id       String        @id @default(cuid())
  title    String
  slug     String?       @unique
  excerpt  String
  cover    String?
  trending Boolean       @default(false)
  tags     String[]
  category NewsCategory? @default(GLOBAL)

  authorId String?
  author   User?   @relation("NewsAuthor", fields: [authorId], references: [id])

  createdAt DateTime @default(now())

  @@index([trending])
}

enum NewsCategory {
  GLOBAL
  DESIGN
  PREVIEW
}
